start : programme?

programme : txt
          | txt programme
          | dumbo_bloc
          | dumbo_bloc programme

txt : /(?:(?!{{).\s*)+/

dumbo_bloc : "{{" expressions_list? "}}"

expressions_list : expression ";" expressions_list?

expression : print_expression
           | for_loop_expression
           | assignment_expression
           | if_then_expression

print_expression : "print" string_expression

for_loop_expression : "for" loop_variable_assignment "do" expressions_list "endfor"

loop_variable_assignment : variable "in" (string_list | variable)

assignment_expression : variable ":=" (string_expression | string_list | arithmetic_expression)

if_then_expression : "if" if_condition "do" expressions_list "endif"

if_condition : (boolean_expression | comparison_expression)

boolean_expression : BOOLEAN
                   | boolean_expression BOOLEAN_OPERATOR boolean_expression
                   | "(" boolean_expression ")"

comparison_expression : decimal_integer COMPARISON_OPERATOR decimal_integer

arithmetic_expression : decimal_integer
                      | (arithmetic_expression | variable) ARITHMETIC_OPERATOR (arithmetic_expression | variable)
                      | "(" arithmetic_expression ")"

string_expression : string
                  | variable
                  | string_expression "." string_expression

string_list : "(" string_list_interior ")"

string_list_interior : string
                     | string"," string_list_interior

string : /'(.*?)'/

variable : /[a-zA-Z_][a-zA-Z0-9_]*/

signed_decimal_integer : ["+" | "-"] decimal_integer

decimal_integer : "0" | non_zero_digit digit*

digit: "0" | non_zero_digit

non_zero_digit: "1".."9"

BOOLEAN: "true" | "false"

ARITHMETIC_OPERATOR: "+"| "-" | "*" | "/" | "%"

COMPARISON_OPERATOR: "<" | ">" | "=" | "!=" | "<=" | ">="

BOOLEAN_OPERATOR: "or" | "and"

%import common.WS
%ignore WS